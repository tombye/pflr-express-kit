{% from '../Fieldset/Fieldset.njk' import Fieldset with context %}
{% from '../OptionLabel/OptionLabel.njk' import OptionLabel with context %}
{% from '../SubBlock/SubBlock.njk' import SubBlock with context %}
{% macro RadioGroup(name, inline='', reveals='', visually_hidden=true, or=false, options='') %}
{% set prefixedName = name %}
{% if route._prefix %}{% set prefixedName = route._prefix + prefixedName %}{% endif %}
{% set error = getError(prefixedName) %}
{% if not options %}
  {% set options = getBlockProp(name, 'options') %}
{% endif %}
{% if not inline %}
  {% set inline = getBlockProp(name, 'inline') %}
{% endif %}
{% set inlineType = typeof(inline) %}
{% if inlineType != 'boolean' %}
{% if options.length == 2 %}{% set inline=true %}{% endif %}
{% endif %}
{% set visually_hidden = getBlockProp(name, 'visuallyhidden') %}
<div class="form-group{% if error %} error{% endif %}"{% if name %} id="{{name}}" data-block-name="{{name}}"{% endif %}>

{% call Fieldset(name, inline=inline, visually_hidden=visually_hidden) %}
    {% set or = getBlockProp(name, 'or') %}
    {% set reveals = getBlockProp(name, 'reveals') %}{# ? #}
    {% set excludes = getBlockProp(name, 'reveals_exclude') %}{# ? #}
    {% set open = false %}
    {% set closed = false %}
    {# {% set hasOptionReveals = false %}
    {% for option_name in getBlockProp(name, 'options') %}
      {% if option_name.value %}
        {% set option = option_name %}
      {% else %}
        {% set option = getBlock(option_name) %}
      {% endif %}
      {% if checkReveals(name, option.value) %}{% set hasOptionReveals = true %}{% endif %}
    {% endfor %} #}
    {% for option_name in options %}
      {% if option_name.value %}
        {% set option = option_name %}
      {% else %}
        {% set option = getBlock(option_name) %}
      {% endif %}
      {% set checked = option.checked %}
      {% if getValue and checkReveals %}
      {% if option.value === getValue(prefixedName) %}
        {% set checked = true %}
      {% endif %}
      {% set optionReveals = checkReveals(prefixedName, option.value) %}
      {% endif %}
      {# {% if option.value === 'yes' %}{{ optionReveals }}{% endif %} #}
      {#{% if excludes %}
        {% for val in excludes %}
          {% if val === option.value %}
            {% set optionReveals = false %}
          {% endif %}
        {% endfor %}
      {% endif %}#}
      {% if checked %}
        {% set closed = true %}
      {% endif %}
      {% if optionReveals and checked %}
        {% set open = true %}
        {% set closed = false %}
      {% endif %}
      {% if loop.last %}
        {% if or %}
          <p class="form-block or-block">{{ getString('string:or') }}</p>
        {% endif %}	
      {% endif %}
      <div class="multiple-choice"{% if optionReveals %} data-target="reveals--{{ optionReveals }}"{% endif %}>
        <input id="{{ prefixedName }}-option-{{ loop.index }}" type="radio" name="{{ prefixedName }}" value="{{ option.value }}"{% if checked %} checked{% endif %}{% if optionReveals %} aria-controls="reveals--{{ optionReveals }}"{% endif %}>
      <label data-block-name={{option_name}} for="{{ prefixedName }}-option-{{ loop.index }}" class="block-label selection-button-radio">
        {{ OptionLabel(option) }}
      </label>
      </div>
      {{ SubBlock(option.subblock) }}
    {% endfor %}
    {# {% if getBlockProp(name, 'subblock') %}
    {% set closed = !checkRevealRequired(getBlockProp(name, 'subblock') %}
    checkNoDependency {{ getBlockProp(name, 'subblock') }}:{{ checkNoDependency(getBlockProp(name, 'subblock')) }}
    checkRevealRequired {{ getBlockProp(name, 'subblock') }}:{{ checkRevealRequired(getBlockProp(name, 'subblock')) }}
    {% endif %} #}
    {# <p>Closed:{{ closed }}, optionReveals:{{optionReveals}}, checked:{{checked}}, </p> #}
    {# {% set closed = true %} #}
    {{ SubBlock(getBlockProp(name, 'subblock'), closed=closed) }}
{% endcall %}
</div>
{% endmacro %}
